var G=function(){return{eq2:function(a,b){return a[0]===b[0]&&a[1]===b[1]},add2:function(a,b){return[a[0]+b[0],a[1]+b[1]]},sub2:function(a,b){return[a[0]-b[0],a[1]-b[1]]},dot2:function(a,b){return a[0]*b[0]+a[1]*b[1]},det2:function(a,b){return a[0]*b[1]-a[1]*b[0]},mul2:function(a,b){return[a*b[0],a*b[1]]},sqNorm2:function(a){return G.dot2(a,a)},norm2:function(a){return Math.sqrt(G.sqNorm2(a))},normalized:function(a){return G.mul2(1/G.norm2(a),a)},dist2:function(a,b){return G.norm2(G.sub2(a,b))},sqDist2:function(a,
b){return G.sqNorm2(G.sub2(a,b))},rot2:function(a,b,c){return[a[0]*b-a[1]*c,a[1]*b+a[0]*c]},lerp2:function(a,b,c){return G.add2(G.mul2(1-c,a),G.mul2(c,b))},proj2:function(a,b){var c=G.sub2(b[1],b[0]),e=G.sub2(a,b[0]),e=G.dot2(e,c)/G.sqNorm2(c),c=G.mul2(e,c);return G.add2(b[0],c)},eq3:function(a,b){return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]},add3:function(a,b){return[a[0]+b[0],a[1]+b[1],a[2]+b[2]]},sub3:function(a,b){return[a[0]-b[0],a[1]-b[1],a[2]-b[2]]},dot3:function(a,b){return a[0]*b[0]+a[1]*
b[1]+a[2]*b[2]},sqNorm3:function(a){return G.dot3(a,a)},norm3:function(a){return Math.sqrt(G.sqNorm3(a))},dist3:function(a,b){return G.norm3(G.sub3(a,b))},sqDist3:function(a,b){return G.sqNorm2(G.sub3(a,b))},refl:function(a,b){var c=G.dot2(a,b)/G.dot2(b,b);return G.sub2(a,G.mul2(2*c,b))},march:function(a,b){for(var c,e,d=1;d<b.length;d++){c=G.dist2(b[d-1],b[d]);if(c>=a)return G.lerp2(b[d-1],b[d],a/c);a-=c}d=b.length-1;e=G.sub2(b[d],b[d-1]);c=G.norm2(e);return G.add2(b[d],G.mul2(a/c,e))},cspline:function(a,
b,c){var e=[],d=a.slice(0);d.unshift(a[0]);d.push(a[a.length-1]);for(a=1;a<d.length-2;a++)for(var g=G.mul2(b,G.sub2(d[a+1],d[a-1])),f=G.mul2(b,G.sub2(d[a+2],d[a])),h=0;h<c;h++){var l=h/c,k=l*l,m=k*l,n=2*m-3*k+1,p=-2*m+3*k,l=m-2*k+l,k=m-k;e.push([n*d[a][0]+p*d[a+1][0]+l*g[0]+k*f[0],n*d[a][1]+p*d[a+1][1]+l*g[1]+k*f[1]])}return e}}}();function GeomContainer(){this.children=[]}
(function(){GeomContainer.prototype.addChild=function(a){this.children.push(a)};GeomContainer.prototype.draw=function(a){for(var b=0;b<this.children.length;b++)this.children[b].draw(a)};GeomContainer.prototype.intersect=function(a,b){for(var c=[],e=1E30,d=0;d<this.children.length;d++){var g=this.children[d].intersect(a,b);if(2===g.length){var f=G.sqDist2(a,g[0]);f<e&&(e=f,c=g)}}return c}})();
function Arc(a,b,c){this.center=a;this.radius=b;this.span=c;this.vectors=[];for(a=0;a<this.span.length;a++)this.vectors[a]=[Math.cos(this.span[a]),Math.sin(this.span[a])]}
(function(){Arc.prototype.draw=function(a){for(var b=0;b<this.span.length;b+=2)a.beginPath(),a.arc(this.center[0],this.center[1],this.radius,this.span[b],this.span[b+1],!1),a.stroke()};Arc.prototype.intersect=function(a,b){var c=G.sub2(a,this.center),e=G.sqNorm2(b),d=G.dot2(c,b),c=G.sqNorm2(c)-this.radius*this.radius,c=d*d-e*c;if(0<=c){c=Math.sqrt(c);e=[(-d-c)/e,(-d+c)/e];for(d=0;d<e.length;d++)if(c=e[d],1E-4<c)for(var c=G.add2(a,G.mul2(c,b)),g=G.sub2(c,this.center),f=0;f<this.span.length;f+=2)if(0<=
G.det2(this.vectors[f],g)&&0>=G.det2(this.vectors[f+1],g))return[c,g]}return[]}})();function Parabola(a,b,c,e){this.origin=a;this.focalDist=b;this.angle=c;this.span=e;this._delta=(e[e.length-1]-e[0])/200;this._cos=Math.cos(c);this._sin=Math.sin(c)}
(function(){Parabola.prototype.draw=function(a){a.save();a.translate(this.origin[0],this.origin[1]);a.rotate(this.angle);a.beginPath();for(var b=0;b<this.span.length;b+=2){var c=this.span[b],e=this.span[b+1];a.moveTo(c,c*c/(4*this.focalDist));for(c+=this._delta;c<e;)a.lineTo(c,c*c/(4*this.focalDist)),c+=this._delta;a.lineTo(e,e*e/(4*this.focalDist))}a.stroke();a.restore()};Parabola.prototype.intersect=function(a,b){var c=G.sub2(a,this.origin),c=G.rot2(c,this._cos,this._sin),e=G.normalized(G.rot2(b,
this._cos,this._sin)),d=[];if(1E-8>Math.abs(e[0]))d=c[0],d=[(d*d/(4*this.focalDist)-c[1])/e[1]];else{var g=e[0]*e[0],f=e[0]*c[0]-2*this.focalDist*e[1],h=f*f-g*(c[0]*c[0]-4*this.focalDist*c[1]);0<=h&&(h=Math.sqrt(h),d=[(-f-h)/g,(-f+h)/g])}for(g=0;g<d.length;g++)if(f=d[g],1E-4<f){f=G.add2(c,G.mul2(f,e));for(h=0;h<this.span.length;h+=2)if(f[0]>=this.span[h]&&f[0]<=this.span[h+1])return c=[-f[0]/(2*this.focalDist),1],[G.add2(G.rot2(f,this._cos,-this._sin),this.origin),G.rot2(c,this._cos,-this._sin)]}return[]}})();
